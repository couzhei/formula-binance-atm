
# openssl req -newkey rsa:2048 -sha256 -nodes -keyout PRIVATE.key -x509 -days 365 -out PUBLIC.pem -subj "/C=FR/ST=State/L=Paris/O=Markepto/CN=https://54.217.52.59"
# sudo certbot --nginx -m couzhei@gmail.com -d 54.217.52.59.nip.io # ðŸ‘ˆ Use nip.io for IP-based domains

server {
    listen 443 ssl http2;
    server_name 54.217.52.59;

    # Use Let's Encrypt certificates instead of self-signed
    # ssl_certificate /home/ubuntu/code/formula-binance-atm/PUBLIC.pem;
    # ssl_certificate_key /home/ubuntu/code/formula-binance-atm/PRIVATE.key;

    ssl_certificate /home/ubuntu/code/formula-binance-atm/cert.pem;
    ssl_certificate_key /home/ubuntu/code/formula-binance-atm/key.pem;
    # ssl_certificate /home/ubuntu/code/formula-binance-atm/localhost.crt; # Path to your SSL certificate
    # ssl_certificate_key /home/ubuntu/code/formula-binance-atm/localhost.key; # Path to your SSL private key
    # Keep your existing SSL protocols and security headers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Security headers (keep all existing)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Telegram-specific fixes
    add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'";
    add_header Access-Control-Allow-Origin *;

    # Modified API location block
    location /api/ {
        proxy_pass https://localhost:8080/api/; # Keep /api/ in proxy_pass
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Remove duplicate CORS headers
        # (Keep only these)
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

        # Remove rewrite rule
        # rewrite ^/api/(.*) /$1 break;
    }

    # Keep existing Next.js configuration
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    server_name 54.217.52.59;
    return 301 https://$host$request_uri;
}


#### You can always debug with something minimal
# /etc/nginx/sites-available/minimal.conf
# server {
#     listen 80;
#     server_name 54.217.52.59;
#     location / {
#         return 200 "Hello, world!";
#     }
# }
# Test it:
# sudo nginx -t -c /etc/nginx/sites-available/minimal.conf
# If this works, gradually add back your original configuration,
# to find out about the culprit